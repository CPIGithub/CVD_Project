size = 3
) +
geom_point(
data = data %>%
group_by({{category_var}}) %>%
summarize(Median = median({{y_var}}), Q1 = quantile({{y_var}}, 0.25), Q3 = quantile({{y_var}}, 0.75)),
aes_string(x = x_var, y = "Q1"),
color = "green",
size = 3
) +
geom_point(
data = data %>%
group_by({{category_var}}) %>%
summarize(Median = median({{y_var}}), Q1 = quantile({{y_var}}, 0.25), Q3 = quantile({{y_var}}, 0.75)),
aes_string(x = x_var, y = "Q3"),
color = "orange",
size = 3
) +
labs(
title = paste("Boxplot of", y_var, "by", x_var),
x = x_var,
y = y_var,
color = "Legend"
) +
theme_minimal()
return(p)
}
# Example usage:
# data <- your_data_frame
boxplot_gen(df, "ck_blood_glucose_yes", "svy_duration", "ck_blood_glucose_yes")
# Create a generic function for labeled box plots
boxplot_gen <- function(data, x_var, y_var, category_var) {
p <- ggplot(data, aes(x = x_var, y = y_var)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 1) +
geom_point(
data = data %>%
group_by({{category_var}}) %>%
summarize(Median = median({{y_var}}), Q1 = quantile({{y_var}}, 0.25), Q3 = quantile({{y_var}}, 0.75)),
aes_string(x = x_var, y = "Median"),
color = "blue",
size = 3
) +
geom_point(
data = data %>%
group_by({{category_var}}) %>%
summarize(Median = median({{y_var}}), Q1 = quantile({{y_var}}, 0.25), Q3 = quantile({{y_var}}, 0.75)),
aes_string(x = x_var, y = "Q1"),
color = "green",
size = 3
) +
geom_point(
data = data %>%
group_by({{category_var}}) %>%
summarize(Median = median({{y_var}}), Q1 = quantile({{y_var}}, 0.25), Q3 = quantile({{y_var}}, 0.75)),
aes_string(x = x_var, y = "Q3"),
color = "orange",
size = 3
) +
labs(
title = paste("Boxplot of", y_var, "by", x_var),
x = x_var,
y = y_var,
color = "Legend"
) +
theme_minimal()
return(p)
}
# Example usage:
# data <- your_data_frame
boxplot_gen(df, "ck_blood_glucose_yes", "svy_duration", "ck_blood_glucose_yes")
table(df$ck_blood_glucose_yes)
# Create a generic function for labeled box plots
# Create a generic function for labeled box plots
boxplot_gen <- function(data, x_var, y_var, category_var) {
p <- ggplot(data, aes_string(x = x_var, y = y_var)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 1) +
geom_point(
data = data %>%
group_by({{category_var}}) %>%
summarize(Median = median({{y_var}}, na.rm = TRUE), Q1 = quantile({{y_var}}, 0.25, na.rm = TRUE), Q3 = quantile({{y_var}}, 0.75, na.rm = TRUE)),
aes_string(x = x_var, y = "Median"),
color = "blue",
size = 3
) +
geom_point(
data = data %>%
group_by({{category_var}}) %>%
summarize(Median = median({{y_var}}, na.rm = TRUE), Q1 = quantile({{y_var}}, 0.25, na.rm = TRUE), Q3 = quantile({{y_var}}, 0.75, na.rm = TRUE)),
aes_string(x = x_var, y = "Q1"),
color = "green",
size = 3
) +
geom_point(
data = data %>%
group_by({{category_var}}) %>%
summarize(Median = median({{y_var}}, na.rm = TRUE), Q1 = quantile({{y_var}}, 0.25, na.rm = TRUE), Q3 = quantile({{y_var}}, 0.75, na.rm = TRUE)),
aes_string(x = x_var, y = "Q3"),
color = "orange",
size = 3
) +
labs(
title = paste("Boxplot of", y_var, "by", x_var),
x = x_var,
y = y_var,
color = "Legend"
) +
theme_minimal()
return(p)
}
# Example usage:
# data <- your_data_frame
boxplot_gen(df, "ck_blood_glucose_yes", "svy_duration", "ck_blood_glucose_yes")
# duration by case type
df %>%
filter(svy_duration  < 300 & ck_cal_eligible == 1) %>%
ggplot(aes(mhist_drug_noall, svy_duration)) +
geom_boxplot()
# duration by case type
df %>%
filter(svy_duration  < 300 & ck_cal_eligible == 1) %>%
ggplot(aes(mhist_drug_noall, svy_duration)) +
geom_boxplot() +
labs(x = "Murgang", y = "Nutzen / Konsten \n VerhÃ¤lhniss") +
stat_summary(geom = "text", fun.y = quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.4), size=3.5)
# duration by case type
df %>%
filter(svy_duration  < 300 & ck_cal_eligible == 1) %>%
mutat(mhist_drug_noall = ifelse(mhist_drug_noall == 1, "No Medication Questions", "At least one type medication question")) %>%
ggplot(aes(mhist_drug_noall, svy_duration)) +
geom_boxplot() +
labs(x = "No Medication History Question", y = "Survey Duration") +
stat_summary(geom = "text", fun.y = quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.4), size=3.5)
# duration by case type
df %>%
filter(svy_duration  < 300 & ck_cal_eligible == 1) %>%
mutate(mhist_drug_noall = ifelse(mhist_drug_noall == 1, "No Medication Questions", "At least one type medication question")) %>%
ggplot(aes(mhist_drug_noall, svy_duration, fill = mhist_drug_noall)) +
geom_boxplot() +
labs(x = "No Medication History Question", y = "Survey Duration") +
stat_summary(geom = "text", fun.y = quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.4), size=3.5)
# duration by case type
df %>%
filter(svy_duration  < 300 & ck_cal_eligible == 1) %>%
mutate(mhist_drug_noall = ifelse(mhist_drug_noall == 1, "No Medication Questions", "At least one type medication question")) %>%
ggplot(aes(mhist_drug_noall, svy_duration, fill = mhist_drug_noall)) +
geom_boxplot() +
labs(x = "No Medication History Question", y = "Survey Duration") +
stat_summary(geom = "text", fun.y = quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.4), size=3.5) +
theme(legend.position="none")
df %>%
filter(svy_duration  < 300 & ck_cal_eligible == 1) %>%
ggplot(aes(mhist_drug_nocount, svy_duration, fill = factor(mhist_drug_nocount))) +
geom_boxplot() +
labs(x = "No Medication History Question", y = "Survey Duration") +
stat_summary(geom = "text", fun.y = quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.4), size=3.5) +
theme(legend.position="none")
df %>%
filter(svy_duration  < 300 & ck_cal_eligible == 1) %>%
ggplot(aes(mhist_drug_nocount, svy_duration, fill = factor(mhist_drug_nocount))) +
geom_boxplot() +
labs(x = "No Medication History Question", y = "Survey Duration") +
stat_summary(geom = "text", fun.y = quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.4), size=3.5)
df %>%
filter(svy_duration  < 300 & ck_cal_eligible == 1) %>%
ggplot(aes(mhist_drug_nocount, svy_duration, fill = factor(mhist_drug_nocount))) +
geom_boxplot() +
labs(x = "Number of No Medication History Question", y = "Survey Duration") +
stat_summary(geom = "text", fun.y = quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.4), size=3.5) +
theme(legend.position="none")
df %>%
filter(svy_duration  < 300 & ck_cal_eligible == 1) %>%
ggplot(aes(mhist_drug_nocount, svy_duration, fill = factor(mhist_drug_nocount))) +
geom_boxplot() +
labs(x = "Number of medication history question not administered", y = "Survey Duration") +
stat_summary(geom = "text", fun.y = quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.4), size=3.5) +
theme(legend.position="none")
options(scipen    = 999)
options(max.print = 5000)
options(tibble.width = Inf)
if(!require("pacman")) install.packages("pacman")
pacman::p_load(
tidyverse, lubridate, janitor, ggplot2
)
filter    <- dplyr::filter
select    <- dplyr::select
summarize <- dplyr::summarize
# here::here()
here::i_am("cvd_project.Rproj")
# input data
com_screening <- here::here("05_CVD_Screening_Dashboard", "community_screening.csv")
df <- read.csv(com_screening)
# Calculate counts and percentages for each category
summary_data <- df %>%
select(tobacoo) %>%
group_by(tobacoo) %>%
summarize(Count = n(), Percentage = (n() / nrow(data)) * 100)
# Calculate counts and percentages for each category
summary_data <- df %>%
select(tobacco) %>%
group_by(tobacco) %>%
summarize(Count = n(), Percentage = (n() / nrow(data)) * 100)
View(summary_data)
# Calculate counts and percentages for each category
summary_data <- df %>%
group_by(tobacco) %>%
summarize(Count = n(), Percentage = (n() / nrow(data)) * 100)
# Calculate counts and percentages for each category
ggplot(df, aes(tobacco)) +
geom_bar()
summary_data <- df %>%
group_by(tobacco) %>%
summarize(Count = n(), Percentage = (n() / nrow(df)) * 100)
View(summary_data)
summary_data <- df %>%
select(!is.na(tobacco)) %>%
group_by(tobacco) %>%
summarize(Count = n(), Percentage = (n() / nrow(df)) * 100)
summary_data <- df %>%
select(!is.na(tobacco)) %>%
group_by(tobacco) %>%
summarize(Count = n(), Percentage = (n() / nrow(df)) * 100)
# Calculate counts and percentages for each category
summary_data <- df %>%
filter(!is.na(tobacco)) %>%
group_by(tobacco) %>%
summarize(Count = n(), Percentage = (n() / nrow(df)) * 100)
View(summary_data)
# Calculate counts and percentages for each category
summary_data <- df %>%
filter(!is.na(tobacco)) %>%
group_by(tobacco) %>%
summarize(Count = n(), Percentage = (n() / nrow(df)) * 100)
View(summary_data)
summary_data <- df %>%
filter(!is.na(tobacco))
summary_data <- df %>%
filter(tobacco == "")
# Calculate counts and percentages for each category
summary_data <- df %>%
filter(tobacco != "") %>%
group_by(tobacco) %>%
summarize(Count = n(), Percentage = (n() / nrow(df)) * 100)
View(summary_data)
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5) +
labs(title = "Bar Graph with Counts and Percentages by Smoking Status",
x = "Category",
y = "Count") +
theme_minimal()
# Calculate counts and percentages for each category
summary_data <- df %>%
filter(tobacco != "") %>%
group_by(tobacco) %>%
summarize(Count = n(), Percentage = round((n() / nrow(df)) * 100), 1)
View(summary_data)
# Calculate counts and percentages for each category
summary_data <- df %>%
filter(tobacco != "") %>%
group_by(tobacco) %>%
summarize(Count = n(), Percentage = round((n() / nrow(df)) * 100), 0.1)
View(summary_data)
# Calculate counts and percentages for each category
summary_data <- df %>%
filter(tobacco != "") %>%
group_by(tobacco) %>%
summarize(Count = n(), Percentage = round((n() / nrow(df)) * 100, 1))
View(summary_data)
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count)) +
geom_bar(stat = "identity", fill = tobacco) +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5) +
labs(title = "Bar Graph with Counts and Percentages by Smoking Status",
x = "Category",
y = "Count") +
theme_minimal()
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count)) +
geom_bar(stat = "identity", color = tobacco) +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5) +
labs(title = "Bar Graph with Counts and Percentages by Smoking Status",
x = "Category",
y = "Count") +
theme_minimal()
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count), color = tobacco) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5) +
labs(title = "Bar Graph with Counts and Percentages by Smoking Status",
x = "Category",
y = "Count") +
theme_minimal()
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count), fill = tobacco) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5) +
labs(title = "Bar Graph with Counts and Percentages by Smoking Status",
x = "Category",
y = "Count") +
theme_minimal()
unique(df$tobacco)
# Calculate counts and percentages for each category
summary_data <- df %>%
filter(tobacco != "") %>%
mutate(tobacco = ifelse(tobacco == "No -- I do not currently smoke cigarettes", "No smoking",
ifelse(tobacco == "Yes -- every day    ", "Everyday", "Some days"))) %>%
group_by(tobacco) %>%
summarize(Count = n(), Percentage = round((n() / nrow(df)) * 100, 1))
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count), fill = tobacco) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5) +
labs(title = "Bar Graph with Counts and Percentages by Smoking Status",
x = "Category",
y = "Count") +
theme_minimal()
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count, fill = tobacco)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5) +
labs(title = "Bar Graph with Counts and Percentages by Smoking Status",
x = "Category",
y = "Count") +
theme_minimal()
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count, fill = tobacco)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5) +
labs(title = "Share of Smoking Status",
x = "Category",
y = "Count") +
theme_minimal()
# smoking vs hypertension
summary_data <- df %>%
filter(tobacco != "") %>%
mutate(tobacco = ifelse(tobacco == "No -- I do not currently smoke cigarettes", "No smoking",
ifelse(tobacco == "Yes -- every day    ", "Everyday", "Some days"))) %>%
group_by(tobacco, ck_hypertension) %>%
summarize(Count = n(), Percentage = round((n() / nrow(df)) * 100, 1))
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count, fill = tobacco)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5) +
labs(title = "Share of Smoking Status",
x = "Category",
y = "Count") +
theme_minimal()
View(summary_data)
# Create the bar graph
ggplot(summary_data, aes(x = ck_hypertension, y = Count, fill = ck_hypertension)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5) +
labs(title = "Share of Smoking Status",
x = "Category",
y = "Count") +
theme_minimal()
# smoking vs hypertension
summary_data <- df %>%
filter(tobacco != "") %>%
mutate(tobacco = ifelse(tobacco == "No -- I do not currently smoke cigarettes", "No smoking",
ifelse(tobacco == "Yes -- every day    ", "Everyday", "Some days")),
ck_hypertension = ifelse(ck_hypertension == 1, "Hypertension history", "No hypertension history")) %>%
group_by(tobacco, ck_hypertension) %>%
summarize(Count = n(), Percentage = round((n() / nrow(df)) * 100, 1))
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count, fill = as.factor(ck_hypertension))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5, position = position_dodge(width = 0.9)) +
labs(title = "Comparison of Smoking Status and Hypertension Status",
x = "Smoking Status",
y = "Count",
fill = "Hypertension Status") +
scale_fill_manual(values = c("No" = "blue", "Yes" = "red")) +  # Customize colors
theme_minimal()
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count, fill = as.factor(ck_hypertension))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5, position = position_dodge(width = 0.9)) +
labs(title = "Comparison of Smoking Status and Hypertension Status",
x = "Smoking Status",
y = "Count",
fill = "Hypertension Status") +
theme_minimal()
# Calculate counts and percentages for each category
summary_data <- df %>%
filter(tobacco != "") %>%
mutate(tobacco = ifelse(tobacco == "No -- I do not currently smoke cigarettes", "No smoking",
ifelse(tobacco == "Yes -- every day    ", "Everyday", "Some days"))) %>%
group_by(tobacco) %>%
summarize(Count = n(), Percentage = round((n() / nrow(df)) * 100, 1))
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count, fill = tobacco)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5) +
labs(title = "Share of Smoking Status",
x = "Category",
y = "Count") +
theme_minimal()
# smoking vs hypertension
summary_data <- df %>%
filter(tobacco != "") %>%
mutate(tobacco = ifelse(tobacco == "No -- I do not currently smoke cigarettes", "No smoking",
ifelse(tobacco == "Yes -- every day    ", "Everyday", "Some days")),
ck_hypertension = ifelse(ck_hypertension == 1, "Hypertension history", "No hypertension history")) %>%
group_by(tobacco, ck_hypertension) %>%
summarize(Count = n(), Percentage = round((n() / nrow(df)) * 100, 1))
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count, fill = as.factor(ck_hypertension))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5, position = position_dodge(width = 0.9)) +
labs(title = "Comparison of Smoking Status and Hypertension Status",
x = "Smoking Status",
y = "Count",
fill = "Hypertension Status") +
theme_minimal()
# smoking vs diabetes
summary_data <- df %>%
filter(tobacco != "") %>%
mutate(tobacco = ifelse(tobacco == "No -- I do not currently smoke cigarettes", "No smoking",
ifelse(tobacco == "Yes -- every day    ", "Everyday", "Some days")),
Diabetes = ifelse(Diabetes == 1, "Hypertension history", "No hypertension history")) %>%
group_by(tobacco, Diabetes) %>%
summarize(Count = n(), Percentage = round((n() / nrow(df)) * 100, 1))
# smoking vs diabetes
summary_data <- df %>%
filter(tobacco != "") %>%
mutate(tobacco = ifelse(tobacco == "No -- I do not currently smoke cigarettes", "No smoking",
ifelse(tobacco == "Yes -- every day    ", "Everyday", "Some days")),
ck_diabetes = ifelse(ck_diabetes == 1, "Hypertension history", "No hypertension history")) %>%
group_by(tobacco, ck_diabetes) %>%
summarize(Count = n(), Percentage = round((n() / nrow(df)) * 100, 1))
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count, fill = as.factor(ck_diabetes))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5, position = position_dodge(width = 0.9)) +
labs(title = "Comparison of Smoking Status and Diabetes Status",
x = "Smoking Status",
y = "Count",
fill = "Hypertension Status") +
theme_minimal()
# smoking vs diabetes
summary_data <- df %>%
filter(tobacco != "") %>%
mutate(tobacco = ifelse(tobacco == "No -- I do not currently smoke cigarettes", "No smoking",
ifelse(tobacco == "Yes -- every day    ", "Everyday", "Some days")),
ck_diabetes = ifelse(ck_diabetes == 1, "Diabetes history", "No diabetes history")) %>%
group_by(tobacco, ck_diabetes) %>%
summarize(Count = n(), Percentage = round((n() / nrow(df)) * 100, 1))
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count, fill = as.factor(ck_diabetes))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5, position = position_dodge(width = 0.9)) +
labs(title = "Comparison of Smoking Status and Diabetes Status",
x = "Smoking Status",
y = "Count",
fill = "Hypertension Status") +
theme_minimal()
# smoking vs stroke
summary_data <- df %>%
filter(tobacco != "") %>%
mutate(tobacco = ifelse(tobacco == "No -- I do not currently smoke cigarettes", "No smoking",
ifelse(tobacco == "Yes -- every day    ", "Everyday", "Some days")),
ck_stroke = ifelse(ck_stroke == 1, "Stroke history", "No stroke history")) %>%
group_by(tobacco, ck_stroke) %>%
summarize(Count = n(), Percentage = round((n() / nrow(df)) * 100, 1))
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count, fill = as.factor(ck_stroke))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5, position = position_dodge(width = 0.9)) +
labs(title = "Comparison of Smoking Status and Stroke Status",
x = "Smoking Status",
y = "Count",
fill = "Hypertension Status") +
theme_minimal()
# smoking vs heart attack
summary_data <- df %>%
filter(tobacco != "") %>%
mutate(tobacco = ifelse(tobacco == "No -- I do not currently smoke cigarettes", "No smoking",
ifelse(tobacco == "Yes -- every day    ", "Everyday", "Some days")),
ck_heartatt = ifelse(ck_heartatt == 1, "Heart attack history", "No Heart attack history")) %>%
group_by(tobacco, ck_heartatt) %>%
summarize(Count = n(), Percentage = round((n() / nrow(df)) * 100, 1))
# Create the bar graph
ggplot(summary_data, aes(x = tobacco, y = Count, fill = as.factor(ck_heartatt))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = paste(Count, " (", Percentage, "%)")), vjust = -0.5, position = position_dodge(width = 0.9)) +
labs(title = "Comparison of Smoking Status and Heart Attack Status",
x = "Smoking Status",
y = "Count",
fill = "Hypertension Status") +
theme_minimal()
# input data
com_screening <- here::here("05_CVD_Screening_Dashboard", "community_screening.csv")
df <- read.csv(com_screening)
names(df)
